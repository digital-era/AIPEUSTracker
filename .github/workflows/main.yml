# .github/workflows/main.yml

# 名称保持不变或按需修改
name: Update US Market Data

on:
  # 允许手动和API触发
  workflow_dispatch:
    # [新增] 增加一个输入参数，这样可以从API调用时传入信息
    inputs:
      trigger_source:
        description: 'Source of the trigger (e.g., "manual_ui", "vercel_api_call")'
        required: false
        default: 'manual_ui' # 如果是手动在GitHub页面点击，这是默认值

  # 定时任务保持不变
  schedule:
    # 在美东时间周一至周五的交易时段内运行 (大约从 9:30 AM 到 4:00 PM EST)
    # UTC时间是 EST+5 或 EDT+4。这里设置为每15分钟运行一次，从 UTC 14:00 到 21:59。
    - cron: '*/15 14-22 * * 1-5'

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    # [建议] 为此作业授予对仓库内容的写权限，这是比使用默认token更明确的做法
    permissions:
      contents: write

    steps:
      - name: Check out repository
        # [建议] 使用最新的 v4 版本
        uses: actions/checkout@v4

      - name: Set up Python
        # [建议] 使用最新的 v5 版本
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies from requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run python script
        run: python api/index.py

      - name: Commit and push if there are changes
        # [修改] 使用 env 块来安全地创建动态提交信息，并简化脚本
        env:
          # 创建一个环境变量，它的值根据触发类型动态变化
          COMMIT_MSG: "chore(data): Update US market data (Trigger: ${{ github.event.inputs.trigger_source || github.event_name }})"
        run: |
          # 使用更通用的 bot 信息
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # 添加 data 目录下的所有变动
          git add data/
          
          # 使用更简洁、更可靠的方式检查并提交
          # '|| exit 0' 确保在没有变动时，工作流不会因命令失败而中止
          git diff --staged --quiet || (git commit -m "$COMMIT_MSG" && git push)
          
          echo "Commit process finished. Check for changes."
